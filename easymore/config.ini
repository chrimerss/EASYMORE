[input]
case_name                 =  'case_temp',   # name of the case
target_shp                =  '',            # sink/target shapefile
target_shp_ID             =  '',            # name of the column ID in the sink/target shapefile
target_shp_lat            =  '',            # name of the column latitude in the sink/target shapefile
target_shp_lon            =  '',            # name of the column longitude in the sink/target shapefile
source_nc                 =  '',            # name of nc file to be remapped
var_names                 =  [],            # list of varibale names to be remapped from the source NetCDF file
var_lon                   =  '',            # name of varibale longitude in the source NetCDF file
var_lat                   =  '',            # name of varibale latitude in the source NetCDF file
var_time                  =  'time',        # name of varibale time in the source NetCDF file
var_ID                    =  '',            # name of vriable ID in the source NetCDF file
var_names_remapped        =  [],            # list of varibale names that will be replaced in the remapped file
source_shp                =  '',            # name of source shapefile (essential for case-3)
source_shp_lat            =  '',            # name of column latitude in the source shapefile
source_shp_lon            =  '',            # name of column longitude in the source shapefile
source_shp_ID             =  '',            # name of column ID in the source shapefile
remapped_var_id           =  'ID',          # name of the ID variable in the new nc file; default 'ID'
remapped_var_lat          =  'latitude',    # name of the latitude variable in the new nc file; default 'latitude'
remapped_var_lon          =  'longitude',   # name of the longitude variable in the new nc file; default 'longitude'
remapped_dim_id           =  'ID',          # name of the ID dimension in the new nc file; default 'ID'
overwrite_existing_remap  =  True,          # Flag to automatically overwrite existing remapping files. If 'False', aborts the remapping procedure if a file is detected
temp_dir                  =  './temp/',     # temp_dir
output_dir                =  './output/',   # output directory
format_list               =  ['f8'],        # float for the remapped values
fill_value_list           =  ['-9999'],     # missing values set to -9999
remap_csv                 =  '',            # name of the remapped file if provided
author_name               =  '',            # name of the authour
license                   =  '',            # data license
tolerance                 =  10**-5,        # tolerance
save_csv                  =  False,         # save csv
save_shp                  =  False,         # save intermediate shape file
ncpus                     =  8,             #number of cpus for dask
sort_ID                   =  False,         # to sort the remapped based on the target shapfile ID; target_shp_ID should be given
complevel                 =  4,             # netcdf compression level from 1 to 9. Any other value or object will mean no compression.
